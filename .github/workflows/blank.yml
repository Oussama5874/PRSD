import requests
import subprocess
import re
from IPython.display import display, HTML

# إعدادات
ACCESS_TOKEN = "EAANZA3TeAR7QBOZCYrZCvLMZABe3o4ZAPzseAf4omQ9UWjoy7LyRE2oZBhCjy9yyzNleWpi1EBZC3JqRU0HekEvebBLxiGc1tkiMGMGpiqCjQbPxyyCY5HL8NfnViadmdtXiPxEyRvlTpFkX54mB3B22gKYC0hcaeRBjPDjoRllRdyJodQA7fgYZCZBN5HufZBFNEZD"
PAGE_ID = "154392977758476"
M3U8_URL = "https://cdnamd-hls-globecast.akamaized.net/live/ramdisk/2m_monde/hls_video_ts_tuhawxpiemz257adfc/index.m3u8"  # رابط M3U8 الذي تريد بثه

def create_rtmp_stream(access_token, page_id):
    """
    إنشاء جلسة بث مباشر والحصول على رابط RTMP.
    """
    url = f"https://graph.facebook.com/v21.0/{page_id}/live_videos"
    payload = {
        "title": "My Live Stream",  # عنوان البث
        "description": "Streaming to Facebook Live!",  # وصف البث
        "access_token": access_token
    }
    
    try:
        # إرسال الطلب إلى Facebook API
        response = requests.post(url, data=payload)
        response.raise_for_status()
        
        # معالجة الاستجابة
        data = response.json()
        if "stream_url" in data:
            print(f"Stream URL: {data['stream_url']}")
            return data['stream_url']
        else:
            print("Failed to retrieve RTMP URL. Response:", data)
            return None
    except requests.exceptions.RequestException as e:
        print(f"Error: {e}")
        if 'response' in locals():
            print("Response content:", response.text)
        return None
    except Exception as e:
        print(f"Unexpected error while creating RTMP stream: {e}")
        return None

def extract_mpd_from_ffmpeg_output(ffmpeg_output):
    """
    استخراج رابط MPD من مخرجات FFmpeg.
    """
    # استخدام تعبير منتظم لاستخراج رابط MPD
    mpd_url_pattern = re.compile(r'(?<=Opening)[^\n]+\.mpd')
    mpd_url_match = mpd_url_pattern.search(ffmpeg_output)
    if mpd_url_match:
        return mpd_url_match.group(0)
    return None

def start_stream(m3u8_url, rtmp_url):
    """
    بدء البث المباشر من رابط M3U8 إلى Facebook باستخدام FFmpeg.
    """
    try:
        command = [
            "ffmpeg",
            "-re",
            "-i", m3u8_url,
            "-c:v", "libx264",
            "-c:a", "aac",
            "-strict", "experimental",
            "-f", "flv",
            rtmp_url
        ]
        print("Starting the stream...")
        
        # تنفيذ الأمر ffmpeg والحصول على المخرجات
        result = subprocess.run(command, capture_output=True, text=True)
        
        # طباعة مخرجات FFmpeg
        print("FFmpeg output (stdout):")
        print(result.stdout)
        
        # طباعة الأخطاء في حالة وجودها
        if result.stderr:
            print("FFmpeg error (stderr):")
            print(result.stderr)
        
        # استخراج رابط MPD من المخرجات
        mpd_url = extract_mpd_from_ffmpeg_output(result.stdout)
        
        if mpd_url:
            print(f"MPD URL: {mpd_url}")
            # عرض رابط MPD في Google Colab باستخدام IPython display
            display(HTML(f'<a href="{mpd_url}" target="_blank">Click here to view the MPD link</a>'))
        else:
            print("MPD URL not found in FFmpeg output.")
    
    except subprocess.CalledProcessError as e:
        print(f"FFmpeg failed with error: {e}")
    except FileNotFoundError:
        print("FFmpeg not found. Please install FFmpeg and ensure it is in the system PATH.")
    except Exception as e:
        print(f"Unexpected error while starting stream: {e}")
        return None

def main():
    try:
        print("Getting RTMP URL...")
        rtmp_url = create_rtmp_stream(ACCESS_TOKEN, PAGE_ID)
        if not rtmp_url:
            print("Failed to retrieve RTMP URL.")
            return

        print("Starting Stream...")
        start_stream(M3U8_URL, rtmp_url)

    except Exception as e:
        print(f"Critical error occurred: {e}")

if __name__ == "__main__":
    main()
